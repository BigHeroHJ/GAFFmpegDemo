//http://blog.csdn.net/zhuanzhuwanmei/article/details/52925466
//给当前uniform 变量 制定值
void glUniform1f(GLint location,  GLfloat v0);

void glUniform2f(GLint location,  GLfloat v0,  GLfloat v1);

void glUniform3f(GLint location,  GLfloat v0,  GLfloat v1,  GLfloat v2);

void glUniform4f(GLint location,  GLfloat v0,  GLfloat v1,  GLfloat v2,  GLfloat v3);

void glUniform1i(GLint location,  GLint v0);

void glUniform2i(GLint location,  GLint v0,  GLint v1);

void glUniform3i(GLint location,  GLint v0,  GLint v1,  GLint v2);

void glUniform4i(GLint location,  GLint v0,  GLint v1,  GLint v2,  GLint v3);

其中函数名中包含数字（1、2、3、4）表示接受这个数字个用于更改uniform变量的值，i表示32位整形，f表示32位浮点型，ub表示8位无符号byte，ui表示32位无符号整形，v表示接受相应的指针类型。
参数location 要更改的uniform 变量的 位置 后面是 float 中 使用的新值





指明要更改的 在uniform 变量中使用的新值
void glUniform1fv(GLint location,  GLsizei count,  const GLfloat *value);

void glUniform2fv(GLint location,  GLsizei count,  const GLfloat *value);

void glUniform3fv(GLint location,  GLsizei count,  const GLfloat *value);

void glUniform4fv(GLint location,  GLsizei count,  const GLfloat *value);

void glUniform1iv(GLint location,  GLsizei count,  const GLint *value);

void glUniform2iv(GLint location,  GLsizei count,  const GLint *value);

void glUniform3iv(GLint location,  GLsizei count,  const GLint *value);

void glUniform4iv(GLint location,  GLsizei count,  const GLint *value);

参数location 要更改的uniform 变量的 位置 count 是要更改的个数 如果uniform 是一个数组则>=1  如果不是数组则为1  后面是 count 个数指针的数组




void glUniformMatrix2fv(GLint location,  GLsizei count,  GLboolean transpose,  const GLfloat *value);

void glUniformMatrix3fv(GLint location,  GLsizei count,  GLboolean transpose,  const GLfloat *value);

void glUniformMatrix4fv(GLint location,  GLsizei count,  GLboolean transpose,  const GLfloat *value);
location 指明要更改的uniform变量的位置
count 指明要更改的矩阵个数
transpose 指明是否要转置矩阵，并将它作为uniform变量的值。必须为GL_FALSE。
value 指明一个指向count个元素的指针，用来更新指定的uniform变量。

